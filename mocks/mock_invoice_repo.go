// Code generated by MockGen. DO NOT EDIT.
// Source: invoicehub (interfaces: InvoiceRepository)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_invoice_repo.go -package=mocks . InvoiceRepository
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	invoicehub "invoicehub"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockInvoiceRepository is a mock of InvoiceRepository interface.
type MockInvoiceRepository struct {
	ctrl     *gomock.Controller
	recorder *MockInvoiceRepositoryMockRecorder
}

// MockInvoiceRepositoryMockRecorder is the mock recorder for MockInvoiceRepository.
type MockInvoiceRepositoryMockRecorder struct {
	mock *MockInvoiceRepository
}

// NewMockInvoiceRepository creates a new mock instance.
func NewMockInvoiceRepository(ctrl *gomock.Controller) *MockInvoiceRepository {
	mock := &MockInvoiceRepository{ctrl: ctrl}
	mock.recorder = &MockInvoiceRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInvoiceRepository) EXPECT() *MockInvoiceRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockInvoiceRepository) Create(arg0 context.Context, arg1 *invoicehub.Invoice) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockInvoiceRepositoryMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockInvoiceRepository)(nil).Create), arg0, arg1)
}

// Get mocks base method.
func (m *MockInvoiceRepository) Get(arg0 context.Context, arg1 int) (invoicehub.Invoice, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(invoicehub.Invoice)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockInvoiceRepositoryMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockInvoiceRepository)(nil).Get), arg0, arg1)
}

// GetLastInvoiceForYear mocks base method.
func (m *MockInvoiceRepository) GetLastInvoiceForYear(arg0 context.Context, arg1 int) (invoicehub.Invoice, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLastInvoiceForYear", arg0, arg1)
	ret0, _ := ret[0].(invoicehub.Invoice)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLastInvoiceForYear indicates an expected call of GetLastInvoiceForYear.
func (mr *MockInvoiceRepositoryMockRecorder) GetLastInvoiceForYear(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLastInvoiceForYear", reflect.TypeOf((*MockInvoiceRepository)(nil).GetLastInvoiceForYear), arg0, arg1)
}
